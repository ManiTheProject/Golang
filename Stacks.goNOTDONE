package main

import "fmt"

type stack struct{
    size int
    store []int
    top int
}
func main() {
    s := stack{size:10,
               store: make([]int,0,100),
               top: -1,
              }
    fmt.Println(s)
    s.push(10)
    s.push(15)
    s.display()
}

func (s *stack) push(value int){
    if(s.top + 1 < s.size){
        s.store = append(s.store,value)
    }
}

func (s *stack)pop(){
    if(len(s.store)>0){
        s.store[len(s.store)-1] = -100
    }
}

func (s *stack) peek()int{
    return s.store[len(s.store)-1]
}

func (s *stack) display(){
    for i:=0;i<len(s.store);i++{
        fmt.Printf("%d |",s.store[i])
    }
}
